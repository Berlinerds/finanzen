<?php

/**
 * @file
 *
 * Finanzen module
 */
 
/**
* Implements hook_perm().
*/
function finanzen_perm ()
{
  return array ('administer finanzen', 'add hours to projects');
}

/**
* Implements hook_init().
*/
function finanzen_init(){
  drupal_add_css(drupal_get_path('module', 'finanzen') .'/css/finanzen.css');
}

/**
* Implements hook_help().
*/

#function resourcereservation_help ( $path, $arg )
#{
#  $output=''; // para construir la salida
#  switch ( path )
#  {
#    case 'admin/help#resourcereservation':
#      $output .= '<p>' . t('Módulo que permite la reserva de recursos.') . '</p>';
#      break;
#  }
#  return $output;
#}

/**
 * Implements hook_menu().
 */
function finanzen_menu() {

  $items = array();

  $items['timesheet'] = array (
    'title' => t('List of User timesheet per Month'),
    'description' => 'The module information page',
    'page callback' => 'finanzen_mainpage',
    'access arguments' => array('add hours to projects'),
    'type' => MENU_CALLBACK,
  );
  
  $items['timesheet/month/%'] = array (
    'title' => t('Finanzen timesheet'),
    'description' => 'Timesheet',
    'page callback' => 'finanzen_timesheet_month',
    'page arguments' => array ( 2 ),
    'access arguments' => array('add hours to projects'),
    'type' => MENU_CALLBACK,
  );
  
  /* Insert(project_id, date, user_id) */
  $items['timesheet/insert/%/%/%'] = array (
   'title' => t('Add hours to Project'),
   'page callback' => 'finanzen_insert',
   'page arguments' => array ( 2, 3, 4 ),
   'access arguments' => array('add hours to projects'),
   'type' => MENU_CALLBACK,
  );
  
  /* Update(id) */
  $items['timesheet/update/%'] = array (
   'title' => t('Add hours to Project'),
   'page callback' => 'finanzen_update',
   'page arguments' => array ( 2 ),
   'access arguments' => array('add hours to projects'),
   'type' => MENU_CALLBACK,
  );  
  
  /*  */
  $items['timesheet/whole-month/%'] = array (
   'title' => t('Modify Whole Month'),
   'page callback' => 'finanzen_whole_month',
   'page arguments' => array ( 2 ),
   'access arguments' => array('add hours to projects'),
   'type' => MENU_CALLBACK,
  ); 

  return $items;
}

/**
 * This function calculates next month in the calendar 
 */
function _finanzen_get_next_month(&$month, &$year)
{ 
  if ($month == 12) { $year++; $month=1; } else { $month++; }
}

/**
 * This function calculates previous month in the calendar 
 */
function _finanzen_get_previous_month(&$month, &$year)
{ 
  if ($month == 1) { $year--; $month=12; } else { $month--; }
}

/**
 * This function calculates the first day of the current month for a given $date
 */
function _finanzen_first_day_month($date)
{
  $month = date('m', $date);
  $year = date('Y', $date);
  return mktime(0,0,0,$month, 1, $year);
} 


/**
 * This function calculates next months first day in unix timestamp
 */
function _finanzen_get_first_day_next_month($first_day_month)
{
  $month = date('m', $first_day_month);
  $year = date('Y', $first_day_month);
  _finanzen_get_next_month($month, $year);
  return mktime(0,0,0,$month, 1, $year);
} 

/**
 * This function calculates previous months first day in unix timestamp
 */
function _finanzen_get_first_day_previous_month($first_day_month)
{
  $month = date('m', $first_day_month);
  $year = date('Y', $first_day_month);
  _finanzen_get_previous_month($month, $year);
  return mktime(0,0,0,$month, 1, $year);
} 

/**
 * This function calculates how many days has a given month
 */
function _finanzen_days_in_month($month, $year)
{ 
  // calculate number of days in a month 
  return $month == 2 ? ($year % 4 ? 28 : ($year % 100 ? 29 : ($year % 400 ? 28 : 29))) : (($month - 1) % 7 % 2 ? 30 : 31); 
} 

/**
 * The default page for /timesheet url, now showing some basic information
 */
function finanzen_mainpage() {

  $current_date = time ();
  
  global $user;
  $first_day_month = _finanzen_first_day_month($user->created);
  
  while ($first_day_month < $current_date) {
      $link = "timesheet/month/" . $first_day_month ;
	  $content = '<p>' . l ( date('F Y', $first_day_month), $link ) . '</p>' . $content;
	  $first_day_month = _finanzen_get_first_day_next_month($first_day_month);
  }
  
  return $content;
}


/**
 * This function outputs a month navigator
 */
function _finanzen_month_navigator($first_day_month)
{ 
  $content = "<p>";
  $content .= '<a href="/timesheet">List months</a>';
  
  $current_date = time ();
  $current_first_day_month = _finanzen_first_day_month($current_date);
  
  global $user;
  $user_first_day_month = _finanzen_first_day_month($user->created);
  
  if ($first_day_month > $user_first_day_month) {
  	  $content .= " | ";
	  $content .= '<a href="/timesheet/month/' . _finanzen_get_first_day_previous_month($first_day_month) . '">Previous month</a>';
  }
  
  if ($first_day_month < $current_first_day_month) {
      $content .= " | ";
	  $content .= '<a href="/timesheet/month/' . _finanzen_get_first_day_next_month($first_day_month) . '">Next month</a>';
  }
    
   $content .= "</p>";
   
   return $content;     
} 

/**
 * Users Timesheet for the given month -> $first_day_month
 */
function finanzen_timesheet_month( $first_day_month ) {

  global $user;                    
  
  $month = date('m', $first_day_month);
  $year = date('Y', $first_day_month);
  
  $content .= "<p>Time Sheet for " . $user->name . " / " . date('F Y', $first_day_month) . "</p>";
  
  $content .= _finanzen_month_navigator($first_day_month);
  
  $content .= '<p><a href="/timesheet/whole-month/' . $first_day_month . '">Modify whole month</a></p>';
  
  $number_days = _finanzen_days_in_month($month, $year);

  $all_projects = $user->og_groups;
  
  $array_header = array('date' => t("Date"));
  
  foreach ($all_projects as $project) {
    $project_node = node_load ($project[nid]);
    $array_header[] = $project_node->field_project_code[0]["value"];
  }
  
  $rows = array ();
  
  for ($i = 1; $i <= $number_days; $i++) {
    $day = mktime(0,0,0,$month, $i, $year);
    $row = array ();
    $row['date'] = date('l, d.m.Y', $day);
    foreach ($all_projects as $project) {
      $link = "timesheet/insert/" . $project[nid] . "/" . $day . "/" . $user->uid ;
      $query = "SELECT fuhp.nid, fuhp.hours FROM {finanzen_user_hours_projects} fuhp 
                WHERE fuhp.date=%d AND fuhp.uid=%d AND fuhp.project_id=%d" ;
      $queryResult = db_query ( $query, $day, $user->uid, $project[nid] );
      $resource = db_fetch_object ( $queryResult );
      if ($resource) {
        $link = "timesheet/update/" . $resource->nid ;
        $row[$project[title]] = '<span class="inserted-time">' . round($resource->hours, 2) . " hours</span> " . l ( t('Modify'), $link ) ;
      } 
      else {
        $row[$project[title]] = "0 hours " . l ( t('Insert'), $link ) ;
      }
    }

    $rows[] = $row; 
  }
  
  $content .= theme_table($array_header, $rows);
  
  return $content;
}

/* --------------------- INSERT TIME - PROJECT --------------------------- */

function finanzen_insert ( $project_id, $date, $user_id )
{
  $content .= drupal_get_form ( 'finanzen_insert_form', $project_id, $date, $user_id  );
  return $content;
}

function finanzen_insert_form ( $form, $project_id, $date, $user_id )
{
  $human_date = date('l, d.m.Y', $date);
  $project_node = node_load ($project_id);
  $project_code = $project_node->field_project_code[0]["value"];
 
  $form = array (
    'insert_time' => array (
      '#type' => 'fieldset',
      '#title' => t( 'How many hours did you work in the project <b>' . $project_code . '</b> on <b>' . $human_date . '</b> ?' ),
      'hours' => array ( '#type' => 'textfield',
                         '#title' => 'Hours',
                         '#maxlength' => 2,
                         '#required' => TRUE,
                         '#prefix' => '<div class="insert-time-hours-field">',
                         '#suffix' => '</div>',
                       ),
      'minutes' => array ( '#type' => 'textfield',
                           '#title' => 'Minutes',
                           '#maxlength' => 2,
                           '#required' => TRUE,
                           '#prefix' => '<div class="insert-time-minutes-field">',
                           '#suffix' => '</div>',
                         ),
      'project_id' => array ( '#type' => 'hidden', "#default_value" => $project_id ),
      'date' => array ( '#type' => 'hidden', "#default_value" => $date ),
      'user_id' => array ( '#type' => 'hidden', "#default_value" => $user_id ),
      'submit' => array ( '#type' => 'submit',  '#value' => t('Save'), ),
    ),
  );

  return $form;
}

function finanzen_insert_form_submit ( $form, &$form_state )
{

  $user_id = $form_state['values']['user_id'];
  $date = $form_state['values']['date'];
  $hours = $form_state['values']['hours'];
  $minutes = $form_state['values']['minutes'];
  $project_id = $form_state['values']['project_id'];
  $hours_total = $hours + ((1/60) * $minutes);
  
  $query = "INSERT into {finanzen_user_hours_projects} ( uid, date, hours, project_id ) 
            values ( %d, '%s', %f, %d )";
  $queryResult = db_query ( $query, $user_id, $date, $hours_total, $project_id );

  $form_state['redirect'] = 'timesheet';
}

/* --------------------- UPDATE TIME - PROJECT --------------------------- */

function finanzen_update ( $id )
{
  $content .= drupal_get_form ( 'finanzen_update_form', $id );
  return $content;
}

function finanzen_update_form ( $form, $id )
{ 
  $query = "SELECT * FROM {finanzen_user_hours_projects} fuhp WHERE fuhp.nid=%d";
  $queryResult = db_query ( $query, $id );
  $resource = db_fetch_object ( $queryResult );
  
  $human_date = date('l, d.m.Y', $resource->date);
  $project_node = node_load ($resource->project_id);
  $project_code = $project_node->field_project_code[0]["value"];
  $hours = intval($resource->hours);
  $minutes = round(($resource->hours - $hours) * 60, 0);
 
  $form = array (
    'update_time' => array (
      '#type' => 'fieldset',
      '#title' => t( 'How many hours did you work in the project <b>' . $project_code . '</b> on <b>' . $human_date . '</b> ?' ),
      'hours' => array ( '#type' => 'textfield',
                         '#title' => 'Hours',
                         '#default_value' => $hours,
                         '#maxlength' => 2,
                         '#required' => TRUE,
                         '#prefix' => '<div class="insert-time-hours-field">',
                         '#suffix' => '</div>',
                       ),
      'minutes' => array ( '#type' => 'textfield',
                           '#title' => 'minutes',
                           '#default_value' => $minutes,
                           '#maxlength' => 2,
                           '#required' => TRUE,
                           '#prefix' => '<div class="insert-time-minutes-field">',
                           '#suffix' => '</div>',
                         ),
      'id' => array ( '#type' => 'hidden', "#default_value" => $id ),
      'submit' => array ( '#type' => 'submit',  '#value' => t('Save'), ),
    ),
  );

  return $form;
}

function finanzen_update_form_submit ( $form, &$form_state )
{
  $id = $form_state['values']['id'];
  $hours = $form_state['values']['hours'];
  $minutes = $form_state['values']['minutes'];
  $hours_total = $hours + ((1/60) * $minutes);
  
  $query = "UPDATE finanzen_user_hours_projects SET hours='" . $hours_total . "' 
            WHERE nid='" . $id . "'";
  $queryResult = db_query ( $query );

  $form_state['redirect'] = 'timesheet';
}

/* --------------------- Whole Month --------------------------------- */

function finanzen_whole_month ( $first_day_month )
{
  
  global $user;                    
  
  $month = date('m', $first_day_month);
  $year = date('Y', $first_day_month);

  $all_projects = $user->og_groups;
  
  $array_header = array('date' => t("Date"));
  
  foreach ($all_projects as $project) {
    $project_node = node_load ($project[nid]);
    $array_header[] = $project_node->field_project_code[0]["value"];
  }
  
  $number_days = _finanzen_days_in_month($month, $year);

  $rows = array ();
  
  for ($i = 1; $i <= $number_days; $i++) {
    $day = mktime(0,0,0,$month, $i, $year);
    $row = array ();
    $row['date'] = date('l, d.m.Y', $day);
    
    foreach ($all_projects as $project) {  
      $query = "SELECT fuhp.nid, fuhp.hours FROM {finanzen_user_hours_projects} fuhp 
                WHERE fuhp.date=%d AND fuhp.uid=%d AND fuhp.project_id=%d" ;
      $queryResult = db_query ( $query, $day, $user->uid, $project[nid] );
      $resource = db_fetch_object ( $queryResult );
      
      if ($resource) {
        $hours = intval($resource->hours);
        $minutes = round(($resource->hours - $hours) * 60, 0);
      } 
      else {
        $hours = "";
        $minutes = "";
      }
      
      $form[$day][$project[title]] = array (
        'hours' => array ( '#type' => 'textfield',
                           '#title' => 'Hr',
                           '#value' => $hours,
                           '#maxlength' => 2,
                           '#weight' => 1,
                           '#prefix' => '<div class="insert-time-hours-field">',
                           '#suffix' => '</div>',
                         ),
        'minutes' => array ( '#type' => 'textfield',
                             '#title' => 'Min',
                             '#value' => $minutes,
                             '#maxlength' => 2,
                             '#weight' => 2,
                             '#prefix' => '<div class="insert-time-minutes-field">',
                             '#suffix' => '</div>',
                           ),
      );
      
      $row[$project[title]] = drupal_render($form[$day][$project[title]]);
    }

    $rows[] = $row; 
  }
  
  $form = array (
    'submit' => array (
      '#type' => 'submit',  
      '#value' => t('Save'), 
    ),
  );
  
  // This is where we create the table using theme()
  $output .= theme('table', $array_header, $rows);
  // Now we render whatever is left of the table, for instance the submit buttons
  $output .= drupal_render($form);
  // Magic, return your form
  return $output;

}

/*
function finanzen_table_form_form ( $form )
{
  
  foreach (element_children($form) as $key) {
    dsm($key);
  }
  
  return $form;
}
*/





