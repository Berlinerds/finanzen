<?php

/**
 * @file
 *
 * Finanzen module
 */

/**
 * Implements hook_menu().
 */
function finanzen_menu() {

  $items = array();
  
  $items['finanzen'] = array(
    'title' => t('Finanzen'),
    'menu_name' => 'features',
    'page callback' => 'finanzen_mainpage',
    'access arguments' => array('administer finanzen'),
	'type' => MENU_NORMAL_ITEM,
  );
  
  /* --- REPORTS -- */
      
  $items['finanzen/reports'] = array(
    'title' => t('Finanzen monthly reports'),
    'page callback' => 'finanzen_reports',
    'access arguments' => array('administer finanzen'),
	'type' => MENU_CALLBACK,
  );
  
  /* --- TIMESHEET -- */
  
  $items['timesheet'] = array(
    'title' => t('Timesheet'),
    'menu_name' => 'features',
    'page callback' => 'finanzen_timesheet',
    'access arguments' => array('add hours to projects'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'finanzen.timesheet.inc',
  );
  
  $items['timesheet/month/%'] = array (
    'title' => t('Finanzen timesheet'),
    'description' => 'Timesheet',
    'page callback' => 'finanzen_timesheet_month',
    'page arguments' => array ( 2 ),
    'access arguments' => array('add hours to projects'),
    'type' => MENU_CALLBACK,
        'file' => 'finanzen.timesheet.inc',
  );
  
  $items['timesheet/insert/%/%/%'] = array (
    'title' => t('Add hours to Project'),
    'page callback' => 'finanzen_timesheet_insert',
    'page arguments' => array ( 2, 3, 4 ),
    'access arguments' => array('add hours to projects'),
    'type' => MENU_CALLBACK,
    'file' => 'finanzen.timesheet.inc',
  );
  
  $items['timesheet/update/%/%'] = array (
    'title' => t('Add hours to Project'),
    'page callback' => 'finanzen_timesheet_update',
    'page arguments' => array ( 2, 3 ),
    'access arguments' => array('add hours to projects'),
    'type' => MENU_CALLBACK,
    'file' => 'finanzen.timesheet.inc',
  );  
  
  $items['timesheet/edit-month/%'] = array (
    'title' => t('Modify Whole Month'),
    'page callback' => 'finanzen_timesheet_edit_month',
    'page arguments' => array ( 2 ),
    'access arguments' => array('add hours to projects'),
    'type' => MENU_CALLBACK,
    'file' => 'finanzen.timesheet.inc',
  ); 
  
  /* --- OUTFLOW PERSONAL -- */
    
  $items['finanzen/outflow/personal'] = array(
    'title' => t('Finanzen outflow in Personal per month'),
    'page callback' => 'finanzen_outflow_personal',
    'access arguments' => array('administer finanzen'),
	'type' => MENU_CALLBACK,
	'file' => 'finanzen.outflow.inc',
  );
  
  $items['finanzen/outflow/personal/edit-month/%'] = array (
    'title' => t('Modify outflow in personal per month'),
    'page callback' => 'finanzen_outflow_personal_edit_month',
    'page arguments' => array ( 4 ),
    'access arguments' => array('administer finanzen'),
    'type' => MENU_CALLBACK,
    'file' => 'finanzen.outflow.inc',
  ); 
  
  /* --- OUTFLOW SONSTIGES -- */
  
  $items['finanzen/outflow/sonstiges'] = array(
    'title' => t('Finanzen outflow in sonstiges per month'),
    'page callback' => 'finanzen_outflow_sonstiges',
    'access arguments' => array('administer finanzen'),
	'type' => MENU_CALLBACK,
	'file' => 'finanzen.outflow.inc',
  );
  
  $items['finanzen/outflow/sonstiges/edit-month/%'] = array (
    'title' => t('Modify outflow in sonstiges per month'),
    'page callback' => 'finanzen_outflow_sonstiges_edit_month',
    'page arguments' => array ( 4 ),
    'access arguments' => array('administer finanzen'),
    'type' => MENU_CALLBACK,
    'file' => 'finanzen.outflow.inc',
  ); 
  
  $items['finanzen/outflow/sonstiges/categories'] = array(
    'title' => t('Finanzen outflow sonstiges categories'),
    'page callback' => 'finanzen_outflow_sonstiges_categories',
    'access arguments' => array('administer finanzen'),
	'type' => MENU_CALLBACK,
	'file' => 'finanzen.outflow.inc',
  );
  
  $items['finanzen/outflow/sonstiges/categories/change_status/%/%'] = array(
    'title' => t('Finanzen outflow sonstiges activate/deactivate category'),
    'page callback' => 'finanzen_outflow_sonstiges_categories_change_status',
    'page arguments' => array ( 5,6 ),
    'access arguments' => array('administer finanzen'),
	'type' => MENU_CALLBACK,
	'file' => 'finanzen.outflow.inc',
  );
  
  /* --- INFLOW -- */
      
  $items['finanzen/inflow'] = array(
    'title' => t('Finanzen monthly inflow'),
    'page callback' => 'finanzen_inflow',
    'access arguments' => array('administer finanzen'),
	'type' => MENU_CALLBACK,
	'file' => 'finanzen.inflow.inc',
  );
  
  $items['finanzen/inflow/edit/%'] = array (
    'page callback' => 'finanzen_inflow_edit',
    'page arguments' => array ( 3 ),
    'access arguments' => array('administer finanzen'),
    'type' => MENU_CALLBACK,
    'file' => 'finanzen.inflow.inc',
  );

  $items['finanzen/inflow/delete/confirmation/%'] = array (
    'page callback' => 'finanzen_inflow_delete_confirmation',
    'page arguments' => array ( 4 ),
    'access arguments' => array('administer finanzen'),
    'type' => MENU_CALLBACK,
    'file' => 'finanzen.inflow.inc',
  );
  
  $items['finanzen/inflow/delete/%'] = array (
    'page callback' => 'finanzen_inflow_delete',
    'page arguments' => array ( 3 ),
    'access arguments' => array('administer finanzen'),
    'type' => MENU_CALLBACK,
    'file' => 'finanzen.inflow.inc',
  );

  return $items;
}

/**
* Implements hook_perm().
*/
function finanzen_perm ()
{
  return array ('administer finanzen', 'add hours to projects');
}

/**
* Implements hook_init().
*/
function finanzen_init(){
  drupal_add_css(drupal_get_path('module', 'finanzen') .'/css/finanzen.css');
  drupal_add_js(drupal_get_path('module', 'finanzen') .'/js/finanzen.js');
}

/**
 * Implements hook_theme().
 */
function finanzen_theme() {
  return array (
    'finanzen_timesheet_edit_month_form_theme' => array('arguments' => array('form' => NULL)),
    'finanzen_outflow_personal_edit_month_form_theme' => array('arguments' => array('form' => NULL)),
    'finanzen_outflow_sonstiges_edit_month_form_theme' => array('arguments' => array('form' => NULL))
  );
}

/**
 * Implements hook_preprocess_page().
 */
function finanzen_preprocess_page(&$vars) 
{
  global $user;

  $space = module_exists('spaces') ? spaces_get_space() : FALSE;
  
  foreach ($vars['primary_links'] as $k => &$link) {
    if (($link['title'] == 'Finanzen') && ($space->type == 'og')) {
      unset($vars['primary_links'][$k]);
    }
    //else if (($link['title'] == 'Timesheet') && ($space->type == 'og')) {
    else if (($link['title'] == 'Timesheet') && (($space->type == 'og') || (in_array("administrator", $user->roles)))) {
      unset($vars['primary_links'][$k]);
    }
  }  
}

/* ------------------------------------------------------------------------------ */
/* ----------------------- GENERAL AUXILIAR FUNCTIONS --------------------------- */
/* ------------------------------------------------------------------------------ */

/**
 * This function calculates next month in the calendar 
 */
function _finanzen_get_next_month(&$month, &$year)
{ 
  if ($month == 12) { $year++; $month=1; } else { $month++; }
}

/**
 * This function calculates previous month in the calendar 
 */
function _finanzen_get_previous_month(&$month, &$year)
{ 
  if ($month == 1) { $year--; $month=12; } else { $month--; }
}

/**
 * This function calculates the first day of the current year for a given $date
 */
function _finanzen_first_day_year($date)
{
  $year = date('Y', $date);
  return mktime(0,0,0,1, 1, $year);
}

/**
 * This function calculates the first day of the current year for a given $date
 */
function _finanzen_first_day_next_year($date)
{
  $year = date('Y', $date);
  $year++;
  return mktime(0,0,0,1, 1, $year);
}

/**
 * This function calculates the first day of the current month for a given $date
 */
function _finanzen_first_day_month($date)
{
  $month = date('m', $date);
  $year = date('Y', $date);
  return mktime(0,0,0,$month, 1, $year);
}

/**
 * This function calculates next months first day in unix timestamp
 */
function _finanzen_get_first_day_next_month($date)
{
  $month = date('m', $date);
  $year = date('Y', $date);
  _finanzen_get_next_month($month, $year);
  return mktime(0,0,0,$month, 1, $year);
} 

/**
 * This function calculates previous months first day in unix timestamp
 */
function _finanzen_get_first_day_previous_month($date)
{
  $month = date('m', $date);
  $year = date('Y', $date);
  _finanzen_get_previous_month($month, $year);
  return mktime(0,0,0,$month, 1, $year);
} 

/**
 * This function calculates previous months first day in unix timestamp
 */
function _finanzen_get_first_day_previous_year($date)
{
  $year = date('Y', $date);
  $year--;
  return mktime(0,0,0,1, 1, $year);
} 

/**
 * This function calculates if the given date is weekend day
 */
function _finanzen_is_weekend($date)
{
  $weekday = date('N', $date);
  if ($weekday > 5) { return TRUE; } else { return FALSE; }
} 

/**
 * This function calculates how many days has a given month
 */
function _finanzen_days_in_month($month, $year)
{ 
  // calculate number of days in a month
  return $month == 2 ? ($year % 4 ? 28 : ($year % 100 ? 29 : ($year % 400 ? 28 : 29))) : (($month - 1) % 7 % 2 ? 30 : 31); 
} 

/**
 * This function calculates how many days has a given month
 */
function _finanzen_get_project_code($project_id)
{ 
  $project_node = node_load ($project_id);
  return ($project_node->field_project_code[0]["value"]);
} 

/**
 * Get user name per a given id
 */
function _finanzen_get_user_name($id) {
  $user = user_load($id);
  return $user->name;
}

function _finanzen_list_months_year ($first_day_month, $type = 0 ) {
  
  //$first_day_month = mktime(2,3,4,10, 1, 2013);
  
  switch ($type) {
	  case 1: // Outflow Personal
	    $edit_link = "/finanzen/outflow/personal/edit-month/";
	    break;
	  
	  case 2: // Outflow Sonstiges
	    $edit_link = "/finanzen/outflow/sonstiges/edit-month/";
	    break;
	  
	  case 3: // Inflow
	    $edit_link = "/finanzen/inflow/";
	    break;
	    
	  default:
	    $edit_link = "";
  } 
  
  $result = array();
  $current_date = time ();
  $first_day_next_year = _finanzen_first_day_next_year($first_day_month);
  $ref_date = _finanzen_first_day_year($first_day_month);
  
  if ($first_day_next_year < $current_date) { // año ya acabado
	 while ($first_day_next_year > $ref_date ) {
	 	$month_name = date('M', $ref_date);
	 	if (empty($edit_link)) {
	 		$whole_edit_link = $month_name;
	 	}
	 	else {
  	 		$whole_edit_link = $month_name . ' <a href="' . $edit_link . $ref_date . '"><img class="edit-pencil" src="/' 
                               . drupal_get_path('module', 'finanzen') . '/img/pencil.png" /></a>';
	 	}
	 	$result[$month_name] = array('data' => $whole_edit_link,
                      				 'date' => $ref_date, 
                      				 'class' => 'column_money');
	 	$ref_date = _finanzen_get_first_day_next_month($ref_date);
	 }
  }
  else { // año actual
	 $current_date_first_day_next_month = _finanzen_get_first_day_next_month($current_date);
	 while ($current_date_first_day_next_month > $ref_date ) {
	 	$month_name = date('M', $ref_date);
	 	if (empty($edit_link)) {
	 		$whole_edit_link = $month_name;
	 	}
	 	else {
  	 		$whole_edit_link = $month_name . ' <a href="' . $edit_link . $ref_date . '"><img class="edit-pencil" src="/' 
                               . drupal_get_path('module', 'finanzen') . '/img/pencil.png" /></a>';
	 	}
	 	$result[$month_name] = array('data' => $whole_edit_link,
                                     'date' => $ref_date, 
                                     'class' => 'column_money');
	 	$ref_date = _finanzen_get_first_day_next_month($ref_date);
	 } 
  }
  
  return $result;
}

function _finanzen_outflow_sonstiges_get_category_name ($id) {
	$query = "SELECT name FROM finanzen_outflow_sonstiges_categories WHERE nid=" . $id;
	$queryResult = db_query ( $query );
	if ($cat = db_fetch_object($queryResult))
	  $res = $cat->name;
	else
	  $res = "ERROR";
	  
	return $res;
}

function _finanzen_get_coef_projects_month ($months_curr_year) {
	
	$coefs = array();
	//$total_hours = 0;
	
	foreach ($months_curr_year as $month_name => $month_data) {
		$total_hours_month = array();
		$total_user_hours_month = array();
		
		$date = $month_data['date'];
	
		$query = "SELECT uid, project_id, hours FROM finanzen_timesheet_worker_hours_projects 
			  	  WHERE date>=" . $date . " AND date<" . _finanzen_get_first_day_next_month($date);
			  	  
		$queryResult = db_query ( $query );
	    while ($assignation = db_fetch_object($queryResult)) {
	    	//$total_hours += $assignation->hours;
	    	$total_hours_month['#value'] += $assignation->hours;
	    	$total_hours_month[$assignation->project_id]['#value'] += $assignation->hours;
	    	$total_hours_month[$assignation->project_id][$assignation->uid]['#value'] += $assignation->hours;
	    	$total_user_hours_month[$assignation->uid]['#value'] += $assignation->hours;
		}
		
		if ($total_hours_month['#value'])
			$coefs[$month_name]['#total_hours'] = $total_hours_month['#value'];
		
		foreach (element_children($total_hours_month) as $project_id) {
			$coefs[$month_name][$project_id]['#coef'] = $total_hours_month[$project_id]['#value'] / $total_hours_month['#value'];
			foreach (element_children($total_hours_month[$project_id]) as $user_id) {
			  $coefs[$month_name][$project_id][$user_id] =  
			    $total_hours_month[$project_id][$user_id]['#value'] / $total_user_hours_month[$user_id]['#value'];
			}
		}
	
	}
	
	//$coefs['#total_hours'] = $total_hours;

	return $coefs;
	
}

/* ------------------------------------------------------------------------------ */
/* ------------------------------ MAIN FUNCTIONS -------------------------------- */
/* ------------------------------------------------------------------------------ */

/**
 * Main Page Finanzen (just for administrators)
 */
function finanzen_mainpage( $date = 0 ) {

  $content .= _finanzen_year_reports_navigator($date);
  $content .= finanzen_reports_outflow_personal($date);
  $content .= finanzen_reports_outflow_sonstiges($date);
  $content .= finanzen_reports_inflow($date);
  $content .= finanzen_reports_summary_projects($date);
  /*
  $content .= "</br></br></br></br>";

  $content .= '<p><a href="/finanzen/reports">Monthly Reports</a></p>';
  $content .= '<p>--------------------------------------------------</p>';
  $content .= '<p><a href="/finanzen/outflow/personal">Outflow Personal</a></p>';
  $content .= '<p><a href="/finanzen/outflow/sonstiges">Outflow Sonstiges</a></p>';
  $content .= '<p><a href="/finanzen/outflow/sonstiges/categories">Outflow Sonstiges categories</a></p>';
  $content .= '<p>--------------------------------------------------</p>';
  $content .= '<p><a href="/finanzen/inflow">Inflow</a></p>';
  */
  
  return $content;
}

/* ------------------------------------------------------------------------------ */
/* ---------------------------- REPORT FUNCTIONS -------------------------------- */
/* ------------------------------------------------------------------------------ */

/**
 * This function prints the summary for a given user and date
 */
function _finanzen_reports_summary_user_month($user_id, $date, &$total)
{ 
  $query = "SELECT * FROM {finanzen_timesheet_worker_hours_projects} fuhp
            WHERE fuhp.uid=%d AND fuhp.date>=%d AND fuhp.date<%d ORDER BY fuhp.project_id";
  $queryResult = db_query ( $query, $user_id , $date, _finanzen_get_first_day_next_month($date));
  
  while ($assignation = db_fetch_object($queryResult)){
    $summary[$assignation->project_id] = $summary[$assignation->project_id] + $assignation->hours;
  }
  
  foreach (element_children($summary) as $project_id) {
    $total = $total + $summary[$project_id];
    $content .= '<span class="summary-project-month"><b>' . _finanzen_get_project_code($project_id) .
                '</b>: ' . round($summary[$project_id], 2) . ' hours</span>';
  }
  
  if (empty($content)) { $content = "Empty"; }

  return $content;
}

/**
 * This function prints the summary for a given project and date
 */
function _finanzen_reports_summary_project_month($project_id, $date, &$total)
{ 
  $query = "SELECT * FROM {finanzen_timesheet_worker_hours_projects} fuhp
            WHERE fuhp.project_id=%d AND fuhp.date>=%d AND fuhp.date<%d"; // ORDER BY fuhp.project_id";
  $queryResult = db_query ( $query, $project_id , $date, _finanzen_get_first_day_next_month($date));
  
  while ($assignation = db_fetch_object($queryResult)){
    $summary[$assignation->uid] = $summary[$assignation->uid] + $assignation->hours;
  }
  
  foreach (element_children($summary) as $user_id) {
    $total = $total + $summary[$user_id];
    $content .= '<span class="summary-project-month"><b>' . _finanzen_get_user_name($user_id) .
                '</b>: ' . round($summary[$user_id], 2) . ' hours</span>';
  }
  
  if (empty($content)) { $content = "Empty"; }

  return $content;
}

/**
 * This function outputs a Finanzen month navigator
 */
function _finanzen_reports_navigator($date)
{ 
  $current_date = time ();
  $current_first_day_month = _finanzen_first_day_month($current_date);
  // Init tool date -> 01.01.2014
  $initial_time = "1388530800";
  
  $content .= '<div class="navigator">';
  
  $content .= '<div class="navigator-date">' . date('F Y', $date) . '</div>';
  
  $content .= '<div class="navigator-next">';
  if ($date < $current_first_day_month) {
	$content .= '<a title="Go to next month" href="/finanzen/reports/' 
	            . _finanzen_get_first_day_next_month($date) . '"> &#8811; </a>';
  }
  else { $content .= '<span class="muted"> &#8811; </span>'; }
  $content .= "</div>";
   
  $content .= '<div class="navigator-prev">';
  if ($date > $initial_time) {
  	$content .= '<a title="Go to previous month" href="/finanzen/reports/' 
  	            . _finanzen_get_first_day_previous_month($date) . '"> &#8810; </a>';
  }
  else { $content .= '<span class="muted"> &#8810; </span>'; }
  $content .= "</div>";
  
  $content .= "</div>"; //class="navigator"
   
  return $content;     
}

/**
 * This function outputs a Finanzen month navigator
 */
function _finanzen_year_reports_navigator($date)
{ 
  if ($date == 0) {
    $current_date = time ();
    $first_day_year = _finanzen_first_day_year($current_date);
  }
  else { $first_day_year = _finanzen_first_day_year($date); }

  $current_date = time ();
  $current_first_day_year = _finanzen_first_day_year($current_date);
  
  // Init tool date -> 01.01.2014
  $initial_time = "1388530800";
  
  $content .= '<div class="navigator">';
  
  $content .= '<div class="navigator-date">' . date('Y', $first_day_year) . '</div>';
  
  $content .= '<div class="navigator-next">';
  if ($first_day_year < $current_first_day_year) {
	$content .= '<a title="Go to next month" href="/finanzen/' 
	            . _finanzen_first_day_next_year($first_day_year) . '"> &#8811; </a>';
  }
  else { $content .= '<span class="muted"> &#8811; </span>'; }
  $content .= "</div>";
   
  $content .= '<div class="navigator-prev">';
  if ($first_day_year > $initial_time) {
  	$content .= '<a title="Go to previous month" href="/finanzen/' 
  	            . _finanzen_get_first_day_previous_year($first_day_year) . '"> &#8810; </a>';
  }
  else { $content .= '<span class="muted"> &#8810; </span>'; }
  $content .= "</div>";
  
  $content .= "</div>"; //class="navigator"
   
  return $content;     
}


/**
 * Reports Page Finanzen (just for administrators)
 */
function finanzen_reports($date = 0) {

  if ($date == 0) {
    $current_date = time ();
    $first_day_month = _finanzen_first_day_month($current_date);
  }
  else { $first_day_month = $date; }
  
  $content .= _finanzen_reports_navigator($first_day_month);
  
  /* HORAS POR PERSONAS */
  
  $content .= '<div class="finanzen-title-table">Hours per Worker</div>';
  
  $header = array('person' => array('data' => t("Person"),'class' => 'column_person'), 
                  'summary' => t("Summary"), 
                  'total' => array('data' => t("Total"),'class' => 'column_total'));
  
  $query = "SELECT DISTINCT uid FROM {finanzen_timesheet_worker_hours_projects} fuhp
            WHERE fuhp.date>=%d AND fuhp.date<%d ORDER BY fuhp.project_id";
  $queryResult = db_query ( $query, $first_day_month, _finanzen_get_first_day_next_month($first_day_month));
  
  while ($assignation = db_fetch_object($queryResult)){
    $row = array('person' => _finanzen_get_user_name($assignation->uid),
   	             'summary' => _finanzen_reports_summary_user_month($assignation->uid, $first_day_month, $total),
   	             'total' => round($total, 2) . ' hours');
	$rows[] = $row;
	$total = 0;
  }
  
  $content .= theme_table($header, $rows);
  
  /* HORAS POR PROYECTOS */

  $content .= '<div class="finanzen-title-table">Hours per Project</div>';

  $header2 = array('project' => array('data' => t("Project"),'class' => 'column_project'),
                   'summary' => t("Summary"), 
                   'total' => array('data' => t("Total"),'class' => 'column_total'));
  
  $query = "SELECT DISTINCT project_id FROM {finanzen_timesheet_worker_hours_projects} fuhp
            WHERE fuhp.date>=%d AND fuhp.date<%d";// ORDER BY fuhp.project_id";
  $queryResult = db_query ( $query, $first_day_month, _finanzen_get_first_day_next_month($first_day_month));
  
  while ($assignation = db_fetch_object($queryResult)){
    $row2 = array('project' => _finanzen_get_project_code($assignation->project_id),
   	              'summary' => _finanzen_reports_summary_project_month($assignation->project_id, $first_day_month, $total),
   	              'total' => round($total, 2) . ' hours');
	$rows2[] = $row2;
	$total = 0;
  }
  
  $content .= theme_table($header2, $rows2);
  
  return $content;
}

function finanzen_reports_outflow_personal( $date = 0 ) {
  
  if ($date == 0) {
    $current_date = time ();
    $first_day_month = _finanzen_first_day_month($current_date);
  }
  else { $first_day_month = $date; }
  
  $final_total = array();
  $last_row = array();
  
  $content .= '<div class="finanzen-title-table">Outflow Personal</div>';
  
  $months_curr_year = _finanzen_list_months_year ($first_day_month, 1);
  $header = array('person' => array('data' => t("Person"),'class' => 'column_person')) + $months_curr_year;
                    
  $query = "SELECT DISTINCT finanzen_outflow_worker_month.uid FROM finanzen_outflow_worker_month 
            INNER JOIN users ON finanzen_outflow_worker_month.uid=users.uid
            LEFT JOIN users_roles ON finanzen_outflow_worker_month.uid=users_roles.uid
            ORDER BY users_roles.rid DESC, users.name";
  $queryResult = db_query ( $query );
 
  while ($user = db_fetch_object($queryResult)){
    $row = array('person' => array('data' => _finanzen_get_user_name($user->uid), 'class' => 'not-empty'));
    $last_row['person'] = "<b>TOTAL</b>";
	
	foreach ($months_curr_year as $month_name => $month_data ) {
		
		$total_user_month = 0;
		if (empty($last_row[$month_name])): $last_row[$month_name] = 0; endif;
		
		$query2 = "SELECT * from finanzen_outflow_worker_month
				   WHERE uid=" . $user->uid . " AND date=" . $month_data['date'];
		$queryResult2 = db_query ( $query2 );
		
		while ($outflow = db_fetch_object($queryResult2)) {
			$total_user_month += $outflow->spend;
			$last_row[$month_name] += $outflow->spend;
		}
		
		if ($total_user_month > 0)
  		  $row[] = array('data' => number_format($total_user_month, 2, ",", ".") . " €", 'class' => 'not-empty');
  		else 
    	  $row[] = number_format($total_user_month, 2, ",", ".") . " €";
	
	}
	$rows[] = $row;
  }

  foreach ($last_row as $month_name => $month_data){
	 if ($month_name != "person")
		$last_row[$month_name] = "<b>" . number_format($month_data, 2, ",", ".") . " €</b>";
  }
  
  $rows[] = array('data' => $last_row, 'class' => 'not-empty');
  
  $content .= theme_table($header, $rows, array('class' => 'finanzen reports'));
  
  return $content;
}


function finanzen_reports_outflow_sonstiges( $date = 0 ) {
  
  if ($date == 0) {
    $current_date = time ();
    $first_day_month = _finanzen_first_day_month($current_date);
  }
  else { $first_day_month = $date; }
  
  $final_total = array();
  $last_row = array();
  
  $content .= '<div class="finanzen-title-table">Outflow Sonstiges</div>';
  
  $months_curr_year = _finanzen_list_months_year ($first_day_month, 2); 
  $header = array('name' => array('data' => t("Category"),'class' => 'column_outflow_category')) + $months_curr_year;
                    
  $query = "SELECT DISTINCT category_id FROM finanzen_outflow_sonstiges_month ORDER BY category_id";
  $queryResult = db_query ( $query );
  
  while ($category = db_fetch_object($queryResult)){
    $row = array('name' => array('data' => _finanzen_outflow_sonstiges_get_category_name($category->category_id),  
                                 'class' => 'not-empty'));
    $last_row['name'] = "<b>TOTAL</b>";
	
	foreach ($months_curr_year as $month_name => $month_data ) {
		
		$total_category_month = 0;
		if (empty($last_row[$month_name])): $last_row[$month_name] = 0; endif;
		
		$query2 = "SELECT * from finanzen_outflow_sonstiges_month
				   WHERE category_id=" . $category->category_id . " AND date=" . $month_data['date'];
		$queryResult2 = db_query ( $query2 );
		
		while ($outflow = db_fetch_object($queryResult2)) {
			$total_category_month += $outflow->spend;
			$last_row[$month_name] += $outflow->spend;
		}
		if ($total_category_month > 0)
  		  $row[] = array('data' => number_format($total_category_month, 2, ",", ".") . " €", 'class' => 'not-empty');
  		else
		  $row[] = number_format($total_category_month, 2, ",", ".") . " €";
	}
	$rows[] = $row;
  }

  foreach ($last_row as $month_name => $month_data){
       if ($month_name != "name")
		 $last_row[$month_name] = "<b>" . number_format($month_data, 2, ",", ".") . " €</b>";
  }
  $rows[] = array('data' => $last_row, 'class' => 'not-empty');
  
  $content .= theme_table($header, $rows, array('class' => 'finanzen reports'));

  return $content;
}


function finanzen_reports_inflow ( $date = 0 ) {
  
  if ($date == 0) {
    $current_date = time ();
    $first_day_month = _finanzen_first_day_month($current_date);
  }
  else { $first_day_month = $date; }
  
  $content .= '<div class="finanzen-title-table">Inflow</div>';
  
  $months_curr_year = _finanzen_list_months_year ($first_day_month, 3); 
  $header = array('project' => array('data' => t("Project"),'class' => 'column_person')) + $months_curr_year;
                    
  $query = "SELECT DISTINCT project_id FROM finanzen_inflow";
  $queryResult = db_query ( $query );
  
  $final_total = array();
  $last_row = array();
  
  while ($project = db_fetch_object($queryResult)){
    $row = array('project' => array('data' => _finanzen_get_project_code($project->project_id),  
                                 'class' => 'not-empty'));
    $last_row['name'] = "<b>TOTAL</b>";
	
	foreach ($months_curr_year as $month_name => $month_data ) {
		
		$total_project_month = 0;
		if (empty($last_row[$month_name])): $last_row[$month_name] = 0; endif;
		
		$query2 = "SELECT * from finanzen_inflow
				   WHERE project_id=" . $project->project_id . " AND date=" . $month_data['date'];
		$queryResult2 = db_query ( $query2 );
		
		while ($outflow = db_fetch_object($queryResult2)) {
			$total_project_month += $outflow->spend;
			$last_row[$month_name] += $outflow->spend;
		}
		
		if ($total_project_month > 0)
  		  $row[] = array('data' => number_format($total_project_month, 2, ",", ".") . " €", 'class' => 'not-empty');
  		else
  		  $row[] = number_format($total_project_month, 2, ",", ".") . " €" ;
	}
	$rows[] = $row;
  }

  foreach ($last_row as $month_name => $month_data){
     if ($month_name != "name")
		$last_row[$month_name] = "<b>" . number_format($month_data, 2, ",", ".") . " €</b>";
  }
  $rows[] = array('data' => $last_row, 'class' => 'not-empty');
  
  $content .= theme_table($header, $rows, array('class' => 'finanzen reports'));

  return $content;
}


function finanzen_reports_summary_projects ( $date = 0 ) {
  
  if ($date == 0) {
    $current_date = time ();
    $first_day_month = _finanzen_first_day_month($current_date);
  }
  else { $first_day_month = $date; }
  
  $total_studio_year = 0;
  $months_curr_year = _finanzen_list_months_year ($first_day_month);
  $coefs = _finanzen_get_coef_projects_month($months_curr_year);
  //dsm($coefs);
  
  $query = "SELECT nid FROM og";
  $queryResult = db_query ( $query );
  
  while ($project = db_fetch_object($queryResult)) {
  	  
  	  $rows = array();	  
	  $last_row = array();
	  $total_project_year = 0;
	  
	  $project_code = _finanzen_get_project_code($project->nid);
	  
	  $content .= '<div class="finanzen-title-table">Project ' . $project_code . '</div>';
  	  $header = array('concept' => array('data' => t("Concept"),'class' => 'column_person')) + $months_curr_year;
  	  $row_inflow = array('concept' => array('data' => "Inflow", 'class' => 'not-empty'));
   	  $row_outflow_personal = array('concept' => array('data' => "Outflow Personal", 'class' => 'not-empty'));
   	  $row_outflow_sonstiges = array('concept' => array('data' => "Outflow Sonstiges", 'class' => 'not-empty'));
   	  $row_total_hours = array('concept' => array('data' => "Hours personal (% of total)", 'class' => 'not-empty'));
   	  
      $last_row['name'] = "<b>TOTAL</b>";

  	  foreach ($months_curr_year as $month_name => $month_data ) {
  	  
  	  	  if ($coefs[$month_name][$project->nid]['#coef']) {
			  $numb_hours = $coefs[$month_name]['#total_hours'] * $coefs[$month_name][$project->nid]['#coef'];
			  $percent = ($coefs[$month_name][$project->nid]['#coef'] * 100);
    		  $row_total_hours[] = array('data' => number_format($numb_hours,1,",",".") . "h (" . number_format($percent,1,",",".") 
    		                                     . "%)" . "</br><a target='_blank' href=/finanzen/reports/" . $month_data['date'] . ">detail</a>", 
  		                                 'class' => 'not-empty');
		  }
		  else {
			  $row_total_hours[] = "0 (0%)";
		  }
  	  
	  	  $total_project_month = 0;
	  	  if (empty($last_row[$month_name])): $last_row[$month_name] = 0; endif;
	  	  	
	  	  
	  	  $query2 = "SELECT * from finanzen_inflow
	  	    		 WHERE project_id=" . $project->nid . " AND date=" . $month_data['date'];
	  	  $queryResult2 = db_query ( $query2 );
	  	  	
	  	  while ($outflow = db_fetch_object($queryResult2)) {
		  	  $total_project_month += $outflow->spend;
		  }
		  
		  if ($total_project_month > 0)
  		    $row_inflow[] = array('data' => number_format($total_project_month, 2, ",", ".") . " €", 'class' => 'not-empty');
  		  else
  		    $row_inflow[] = number_format($total_project_month, 2, ",", ".") . " €";
		  
		  
		  $query3 = "SELECT uid, spend FROM finanzen_outflow_worker_month
		  			 WHERE date=" . $month_data['date'];
		  $queryResult3 = db_query ( $query3 );
		  
		  $outflow_personal_project_month = 0;
		  while ($outflow = db_fetch_object($queryResult3)) {
		  	  $iteration_user = user_load($outflow->uid);
			  // Si el usuario es un administrador, su coeficiente es el general del proyecto ya que los administradores
			  // no aplican horas a proyectos en el timesheet
			  if (is_array($iteration_user->roles) && in_array('administrator', $iteration_user->roles)) {
				  $outflow_personal_project_month += ($outflow->spend * $coefs[$month_name][$project->nid]['#coef']);
		  	  }
		  	  else {
			  	  $outflow_personal_project_month += ($outflow->spend * $coefs[$month_name][$project->nid][$outflow->uid]);
			  }
		  }
		  
		  if ($outflow_personal_project_month > 0) {
  		    $row_outflow_personal[] = array('data' => number_format($outflow_personal_project_month,2,",",".") . " €", 
  		                                    'class' => 'not-empty');
  		  }
  		  else {
  		    $row_outflow_personal[] = number_format($outflow_personal_project_month, 2, ",", ".") . " €"; 
		  }
		  
		  $query4 = "SELECT category_id, spend FROM finanzen_outflow_sonstiges_month 
		  			 WHERE date=" . $month_data['date'];
		  $queryResult4 = db_query ( $query4 );
		  
		  $outflow_sontiges_project_month = 0;
		  while ($outflow = db_fetch_object($queryResult4)) {
		  	  $outflow_sontiges_project_month += ($outflow->spend * $coefs[$month_name][$project->nid]['#coef']);
		  }
		  
		  if ($outflow_sontiges_project_month > 0)
  		    $row_outflow_sonstiges[] = array('data' => number_format($outflow_sontiges_project_month, 2, ",", ".") . " €", 
  		                                     'class' => 'not-empty');
  		  else
  		    $row_outflow_sonstiges[] = number_format($outflow_sontiges_project_month, 2, ",", ".") . " €";
		  
		  $last_row[$month_name] = $total_project_month - ($outflow_personal_project_month + $outflow_sontiges_project_month);
	  }
		
	$rows[] = $row_total_hours;
	
	$rows[] = $row_inflow;
	$rows[] = $row_outflow_personal;
	$rows[] = $row_outflow_sonstiges;
	
  	foreach ($last_row as $month_name => $month_data){
  		if ($month_name != "name") {
		  $last_row[$month_name] = "<b>" . number_format($month_data, 2, ",", ".") . " €</b>";
		  if ($month_data < 0)
		      $last_row[$month_name] = array('data' => $last_row[$month_name],'class' => 'red');
		  elseif ($month_data > 0)
    		  $last_row[$month_name] = array('data' => $last_row[$month_name],'class' => 'green');
    	}
    	$total_project_year += $month_data;
    }

    $rows[] = array('data' => $last_row, 'class' => 'not-empty');
    
    $content .= theme_table($header, $rows, array('class' => 'finanzen reports'));
    
    if ($total_project_year > 0)
      $class = "class='green'"; 
    elseif ($total_project_year < 0)
      $class = "class='red'";
    else
      $class = "";
      
    $content .= "<span style='font-size:16px'>TOTAL " . date("Y", $first_day_month) . " " . $project_code . ": <b " . $class . ">" . 
                number_format($total_project_year, 2, ",", ".") . " €</b></span><br/><br/>";
  
    $total_studio_year += $total_project_year;
  }
  
  if ($total_studio_year > 0)
      $class = "class='green'"; 
    elseif ($total_studio_year < 0)
      $class = "class='red'";
    else
      $class = "";
  
  $content .= "<span style='font-size:20px'>TOTAL HEIMBALP " . date("Y", $first_day_month) .  ": <b " . $class . ">" . 
                number_format($total_studio_year, 2, ",", ".") . " €</b></span><br/><br/>";

  return $content;
}




